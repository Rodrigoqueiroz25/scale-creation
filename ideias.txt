
quero criar uma escala.

eu tenho o seguinte:

1 - coroinha
2 - missa

Coroinha

- nome
- disponibilidade
- status(coroinha ou cerimoniario)
- id

Missa

- dia (segunda, terça, ...)
- horario
- descrição
- solenidade
- id

o coroinha será alocado em uma vaga x para a missa id.

Alocação

- nome coroinha ou id
- dia (segunda, terça, ...)
- data(1,31)
- horario
- numero de vaga
- id



tem regras que devem ser seguidas

1 - tem missa de terça a domingo (agenda)
2 - coroinha deve servir duas vezes na semana. uma vez entre terça e sabado e uma vez no domingo.
3 - isso vale por semana.
4 - não deve estar duas vezes na mesma missa.

para os dias de terça a sabado:

1 - o coroinha deve servir uma missa pelo menos.
2 - pelo menos 4 pessoas por dia (depende muito da quantidade total de coroinhas)
3 - deve ter uma missa por dia.

para o domingo

1 - o coroinha deve servir uma missa pelo menos.
2 - pelo menos 8 vagas (usar a quantidade de pessoas para calcular isso)
3 - caso de solenidade dominical, pode servir mais de uma vez.
4 - deve ter duas missas por dia.



a lista de coroinhas e missas devo obter de fora? acho q sim.
- pelo backend de um banco de dados.
- ou outro.

vamos usar adapter e gateway.



essas regras são dentro de uma semana e poderiam ser codificadas por um objeto semana.

tabela missas: id, dia, horario
tabela coroinha: id, nome, (disponibilidade)
tabela coroinhas alocados: idMissa, idCoroinha, data, vaga.

...vamos tentar colocar em xml.
como ler um xml no javascript?


uma busca fundamental é: o coroinha id ta escalado em alguma missa entre terça e sábado da semana atual?





as telas são os use cases. use case é um comportamento oferecido ao usuário.
ele definiu classes que cuidam disso exclusivamente.
essas classes usam um objeto de dominio que contem as regras de dominio.
    cuida de orquestrar coisas como obter dados, manipular e salvar se preciso.
use case define o que a aplicação faz e como interage com as regras de negocio, logica de negocio encapsulada nas entidades.

orquestra o fluxo de dados entre a interface do usuário, as entidades e quaisquer sistemas externos.
- descrever um processo de negocio ou funcionalidade específica,
- conter a logica necessária para isso.
- interagir com uma ou mais entidades.

aqui no front, a page é use case.

____
CAMADA 3

eu criei uns gateways:
- WeeklyScheduleGateway que fornece a informação de quantas missas, horarios, locais, vagas e descrição de missas agendadas para a semana.
- coroinhaGateway que fornece uma lista dos coroinhas que serão escalados.

por enquanto estão obtendo da memória mesmo.

fica faltando um pra gravar as alocações dos coroinhas...



_____
CAMADA 4

ainda não fiz.



___
CAMADA 2

os meus use cases até o momento são FormMissas e MonthSelection

- FormMissas cuida de obter os dados necessários para gerar um formulário, renderizar na tela e coletar a entrada do usuário.
- MonthSelection cuida de oferecer ao usuário um formulário para escolha do mês e passar para frente.



___
CAMADA 1

talvez tenha objetos como missa, dataCustom, allocation
Tem DateCustom, Week e Month.


proximo passo da refatoração é olhar a parte da alocação e os componentes de FormMissas.









<><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><>><><><><><><><><><><><><><><><><><><><><>><><><><><><><><><><>

quero um programa que me ajude a criar a escala mensal.

eu poderia criar da seguinte forma:

_____
PRIMEIRA forma
- recebendo todos os dados do usuário.

eu exibo um botão para adicionar missa e o usuário clica nele.
aparece formMissa e o usuário insere o dia da semana, a data, horario, nomes dos escalados e descrição.

e assim por diante em todas as missas da semana e depois clicar em "próxima semana".

eu preciso me preocupar com:
- inserir uma missa
- me preocupar com as datas
- me preocupar com dia de semana
- colocar horário
- saber quais pessoas poderia inserir em uma dada missa
- colocar uma descrição.

contras: desse jeito é como fazer manualmente, a unica coisa que seria automatizada seria
a formatação final do arquivo.


_______
SEGUNDA FORMA
- usando template das missas semanais

ao entrar na tela, aparece formMissa de acordo com o template.
o usuário não mais insere o dia da semana, horario, descrição e tem um numero de vagas específico que é fixo.

eu preciso me preocupar com:
- me preocupar com as datas
- saber quais pessoas poderia inserir em uma dada missa
- colocar uma descrição.

contras:
    não preciso ficar inserindo as missas, mas preciso me preocupar em associar uma data a cada missa
    e tb as pessoas que podem servir naquele dia e data.
    o usuário tem que corrigir a primeira e ultima semana do mês, excluindo missas.


___
TERCEIRA FORMA
- usando um gerador de datas para o mês.

antes de entrar na tela, o usuário seleciona o mês para o qual deseja criar a escala.
o usuário não mais precisa inserir as datas e nem corrigir a primeira e ultima semana do mês.

eu preciso me preocupar com:
- saber quais pessoas poderia inserir em uma dada missa
- colocar uma descrição.


contras:
    ter q digitar o nome dos coroinhas, podendo errar.


___
QUARTA FORMA
- usar uma lista de coroinhas em selects para as vagas.

o usuário clica no select e ver todas as possibilidades que pode selecionar e seleciona uma, assim não errando.

eu preciso me preocupar com:
- saber se o coroinha pode ser escalado naquela missa.
- colocar uma descrição.

contras:
    eu tenho que verificar manualmente se o coroinha pode naquela missa, disponibilidade e de acordo com a regra de alocação por semana.


___
QUINTA FORMA
- colocar a regra de não ser escalado duas vezes de terça a sabado e duas vezes no domingo.

quando o usuário escalar fulano em uma missa entre terça e sábado, ele fica indisponível para os outros dias desse range.
quando escalar em uma missa do domingo, fica indisponível para a outra missa do domingo.
Isso dentro da mesma semana, em outra semana, zera tudo.

eu preciso me preocupar com:
- saber se o coroinha pode ser escalado naquela missa de acordo com sua disponibilidade.
- colocar uma descrição.

contra:
    eu preciso saber manualmente a disponibilidade dos coroinhas.


to com a quinta forma implementada.


olhando tudo assim, acho q o gerador de datas deveria ser embutido.


<><><><><><><><><>><>><><><><><><>>>>><>><><><><><><><><><><><><><><><><><><><>><

eu tenho a pagina FormMissas que renderiza vários objetos FormMissa que são os formulários para cada missa da agenda semanal.
cada FormMissa tem vários objetos SelectorAltarServer que é um select onde selecionamos um coroinha. um vacancy para cada vaga.

como será registrado que um coroinha x foi escalado na vaga y para uma missa?

1º forma:
    o objeto vacancy está fazendo o registro, criando um objeto chamado Allocations.

    Allocations é do tipo:  [ option: string ]: Allocation[];
    Allocation tem as propriedades: dayWeekId, dayMonth, weekId, time, local, numVacancy, description

significa que cada coroinha tem um vetor com as informações das missas nas quais ele foi escalado.

para fazer uma busca verificando em quais missas ele está escalado:
    eu acesso usando o nome e itero no array, vendo apenas as missas que ele está, sem precisar ver as que ele possivelmente não estão.

cada objeto vacancy registra a informação que escalou o coroinha e comunica os outros objetos vacancys.

Operações:
    Add: O(1)
    Get: O(n)
    Delete: O(n)


2º forma:
    o registro ser feito por MassForm

    vacancy enviaria para MassForm a informação que um coroinha foi escolhido para a vaga x.
    FormMissa registrará essa escalação do coroinha e informará aos outros FormMissa da semana atual.

    parece ser mais simples.

    eu teria um vetor cheio de objetos missa com os campos:
        dayWeek, day, time, weekId, Vacancies, nameCelebration, local, month, year

para fazer uma busca verificando em quais missas ele está escalado:
    iterar no array e parar quando achar uma missa que contém o nome do coroinha.

Operações:
    Add: O(n)
    Get: O(n)
    Delete: O(n)



_________________________________
Outra coisa

onde vai ficar gravada temporariamente em memória o registro da alocação?

cada MassForm ou SelectorAltarServer precisam saber quais coroinhas já foram escalados para não exibir na lista.

ai cada um poderia receber uma lista com os nomes que não podem ser usados já excluidos previamente.
ou receber a lista completa e com base nas notificações, não exibí-los.

entra aqui a questão da regra de negócio. Onde deve ficar a regra de que se já está entre
terça e sabado não deve aparecer denovo nesses dias?


uma classe representando WeeklySchedule. ela faria a escala, desescala. guardaria as regras.
quem vai me dar a lista de coroinhas? a lista tb cumpre regras. um proxy? um decorator?



vou retirar por enquanto a funcionalidade das regras de escalação.

o que vou guardar na classe? agendamentos?

essa classe WeeklySchedule representa a agenda semanal. mas tenho mais d euma semana,
o que será quando mudar de semana? cria outro objeto? e o anterior faz como?
persiste os dados e carrega de novo caso precise.


uma coisa....

depois que eu concluir a seleção dos servos do altar, eu vou clicar no botão proxima semana.
e como vai ficar a escala q foi feita? vamos salvar em algum local. talvez repository.

quem vai chamar o repository? uma função que executa a mudança da semana handleClickNextWeek

quando quiser voltar a semana pra poder mudar algo? chama o método handleClickPreviousWeek.
tenho q salvar semana atual.

ao entrar na pagina, ela precisa ver se tem dados para carregar. isso vale para o caso de eu querer
editar uma semana já feita antes.


Em WeeklySchedule teria as opções, ja construir o objeto inserindo agendamentos ou construir do zero.
posso usar factory method. o objeto tem q garantir invariância e estado válido. tb as regras.


____
como será a persistência?
    eu farei por semana, vou pegar a lista de missas agendadas e o id da semana, como em WeeklySchedule
    e vou mandar persistir. ai no armazenamento se ele quiser usar tipo:

    {
        week: 1,
        {missa1...},
        {missa2...}
        .
        .
    }

    ou

    {
        {week: 1, missa1...},
        {week: 2, missa2...}
        .
        .
    }

    é decisão la do armazenamento. mas aqui na aplicação é melhor deixar sem um weekId dentro do objeto missa.


____
eu preciso de id de vaga?
    eu tava usando pq cada objeto vaga que fazia o registro. mas agora não precisa.
    só preciso impedir de um altar server ser alocado mais de uma vez na mesma missa.


___
a lógica de ter q trocar um nome assing não deve ficar em MassForm.

1- eu posso deixar em weeklyMassSchedule assim usando o valor antigo para trocar pelo novo se precisar.

2- eu posso deixar para Mass, para isso preciso que exista um id do slot onde foi assign um altar server.
    ai tenho q criar o tipo slot.

Usei a ideia 2.

____
estou pensando. a classe WeeklyMassSchedule ta responsável por criar a agenda das missas baseando-se no plano de missas.
vai adicionar missa e remover e vai me fornecer as missas.

mas tb, está sendo responsável por
    fazer o assign de um altar server, bem como cancelar,
    verificar quais estão assign em uma missa

    ai ela cuida da lógica das regras de alocação de altar server na semana.

eu pensei inicialmente, já que ela cuida da agenda de missas semanal, poderia cuidar das regras de
alocar altar servers da semana. (a regra relacionada a uma missa já está feita pela classe Mass)

parece q são DUAS responsabilidades para mesma classe, seria bom colocar em outra?

uma classe chamada AssignAltarServer que terá os métodos para assign e unassign e implementará as regras
de assign. a classe precisará ter conhecimento das missas agendadas.

aqui entra uma coisa: a classe pode adicionar o altar server nas missas agendadas ou criaria um objeto com eles
e tb adicionaria nas missas.

Criei a classe.___/^ok


_____
a lógica interna ta funcionando.

eu preciso que a lista de nomes de cada seletor seja modificada toda vez que um assign de altar server for feito.

e como faço isso?

1 - entrego uma lista sob medida para cada missa
2 - entrego uma lista de nomes que não devem ser exibidos



__________________________________
eu vi um projeto em que toda a lógica da aplicação estava dentro de uma pasta application e/ou core.
e para cada elemento que fica na tela, tinha uma classe que o representava.

havia uma classe que orquestrava tudo. e que implementava as regras de negocio.

e um context api fazia uso da classe principal.

vamos ver se dá pra aplicar algo parecido no meu projeto.

em tela eu tenho:

1 - o formulário para escolher os altar servers
2 - uma lista de formulários da semana.

ele usou uma classe que orquestra, eu to chamando as coisas usando os componentes.



________
eu preciso agora modificar a lista de nomes conforme os assingments dos altar servers.
basicamente as mesmas regras.

classe se chamaria? AltarServerProvider


eu vou usar tanto para alocar quanto para obter lista as mesmas regras (se é domingo ou está alocado na semana).

ai eu poderia usar as regras para obter a lista, da mesma forma quando eu quero assign.

a medida que diz que pode ser adicionado, eu coloco na lista, quando não puder, não coloco.
assim as regras são reaproveitadas.

funcionou.....

os nomes passam no teste das regras antes de ir para a lista de nomes que podem ser adicionados.

mas tem um problema? o nome selecionado acaba sumindo da lista.

seria interessante ter os selects controlados. usar selects controlados.
ou seja, que o select seja setado com o valor alocado naquele slot que ele representa.

o select representa o slot da missa.

funcionou passando para o select o valor do slot do objeto missa.

_____
ta selecionando certinho e ta controlado.


__________
proximo passo:

como eu faço para desselecionar?
como implementar a opção vazia?

a opção vazia tem valor -1 e deve dizer que deve apenas remover altarServer e não adicionar.

Feito....

_________
qual proximo passo?

vamos testar como ta selecionando.

ta indo bem.

mas o q foi selecionado quando avanço e volto não aparece selecionado o que foi anteriormente.

para isso eu preciso salvar o conteúdo? sim.

vamos criar uma classe repository para usar o indexedDB. o que irei armazenar? o weeklyMassSchedule.

ta funcionando. preciso agora recuperar os arquivos salvos.



................................

eu to refazendo o método restore de cada entity para apenas receber os dados que precisa.

to fazendo Mappers para converter entre DTO e Entity e vice-versa.

funcionou.

____________________
como as coisas estão acontecendo?

o calendário do mês é criado,
o planejamento semanal de missas é obtido,
a lista de altar servers é obtida,

o agendamento semanal é criado usando o calendário e o planejamento.
o serviço de lista de altar servers é criado usando a lista e o agendamento.
o use case que faz a alocação de altar server é criado usando o agendamento.




________________________
tava pensando se o weeklyMassSchedule poderia armazenar como propriedade o assigmentRuleManager

weeklyMassSchedule tem a responsabilidade de armazenar a agenda de missas e tem métodos para gerenciar a agenda.
ela poderia armazenar o gerenciador de regras?

essas regras dizem respeito a adicionar altar servers em uma missa. mas a regra leva em consideração o agendamento.
parece fazer sentido.


AssigmentRuleManager é uma fábrica e pode ser estática. mas tem o teste tb.


12_________
tem nomes que podem ser escalados mais de uma vez.

a regra de apenas uma vez na semana, ta um pouco flexibilizada devido ao numero reduzido de pessoas e por alguns nao irem na semana.

tenho q flexibilizar a regra depois.

talvez colocar um numero maximo de vezes que a pessoa pode ser escalada nos dias da semana.

....outra coisa que precisa ter é a disponibilidade.c

DISPONIBILIDADE seria como uma regra para permitir ou não alocação do coroinha em determinados dias da semana.

cada altar server deve conter a informação de sua disponibilidade.

uma branch.

13____
eu somente to salvando quando avanço ou retrocedo a semana. caso haja algum problema, eu perco o progresso.

como seria salvar logo quando seleciono? uma branch so pra ver isso.



14___
vi uma organização do estilo clean architeture e vou tentar fazer isso denovo.

Casos de uso::

1 - Escalar um coroinha para servir em uma vaga disponível.
2 - Retirar coroinha da escala de uma determinada missa.
3 - Adicionar uma vaga para coroinha em uma missa
4 - Remover uma vaga para coroinha em uma missa
5 - Adicionar uma missa
6 - remover uma missa
7 - salvar a escala em pdf
8 - salvar a escala em docx
9 - visualizar uma previa da escala
10 - poder editar depois de finalizada a escala ou semana.





Feito os casos de uso 1,2,5,6.

onde colocar a responsabilidade de criar o calendário mensal e gerar o template da agenda semanal de missas?
acho q em monthSelection.

pq nela eu seleciono o mês apenas. poderia assim que seleciona o mês, criar o objeto mês.

ai eu poderia deixar o objeto weeklyMassSchedule seria construído pela tela buildMassSchedule;
    mas ai teria que passar o objeto mês para a outra pagina. via location ou colocando em indexeddb, ai teria que ter um gateway disso.

ou já poderia criar objetos weeklyMassSchedule para o mês inteiro e salvá-los.
    para cada semana do mês criaria um weeklyMassSchedule. tipo um record chamado mês? do tipo Record<weekId, WeeklyMassSchedule>
    ai eu preciso usar dois gateways, o das missas planejadas e do weeklyMassSchedule



implementei a segunda ideia.







